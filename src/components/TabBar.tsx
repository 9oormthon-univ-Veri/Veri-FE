// src/components/TabBar.tsx
import { useState, useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

// SVG 아이콘을 인라인으로 정의합니다.
const LibraryIcon = ({ active }: { active: boolean }) => (
    <svg 
        width="18" 
        height="20" 
        viewBox="0 0 18 20" 
        fill="currentColor" 
        xmlns="http://www.w3.org/2000/svg"
        className={`tab-item-icon ${active ? 'active' : ''}`}
    >
        <path fillRule="evenodd" clipRule="evenodd" d="M0.255 2.167C0.129378 2.02033 0.0484398 1.84071 0.0217776 1.64944C-0.00488449 1.45817 0.0238473 1.26327 0.104568 1.08783C0.185288 0.912395 0.314613 0.763777 0.477216 0.659591C0.639819 0.555405 0.828882 0.50002 1.022 0.5H13.5C14.0909 0.5 14.6761 0.616396 15.2221 0.842542C15.768 1.06869 16.2641 1.40016 16.682 1.81802C17.0998 2.23588 17.4313 2.73196 17.6575 3.27792C17.8836 3.82389 18 4.40905 18 5C18 5.59095 17.8836 6.17611 17.6575 6.72208C17.4313 7.26804 17.0998 7.76412 16.682 8.18198C16.2641 8.59984 15.768 8.93131 15.2221 9.15746C14.6761 9.3836 14.0909 9.5 13.5 9.5H1.022C0.828882 9.49998 0.639819 9.4446 0.477216 9.34041C0.314613 9.23622 0.185288 9.0876 0.104568 8.91217C0.0238473 8.73673 -0.00488449 8.54183 0.0217776 8.35056C0.0484398 8.15929 0.129378 7.97967 0.255 7.833L1.009 6.953C1.47512 6.40925 1.73134 5.71669 1.73134 5.0005C1.73134 4.28431 1.47512 3.59175 1.009 3.048L0.255 2.167ZM3.062 2.5C3.50045 3.26023 3.73125 4.1224 3.73125 5C3.73125 5.8776 3.50045 6.73977 3.062 7.5H13.5C14.163 7.5 14.7989 7.23661 15.2678 6.76777C15.7366 6.29893 16 5.66304 16 5C16 4.33696 15.7366 3.70107 15.2678 3.23223C14.7989 2.76339 14.163 2.5 13.5 2.5H3.062ZM0 15C0 13.8065 0.474106 12.6619 1.31802 11.818C2.16193 10.9741 3.30653 10.5 4.5 10.5H16.978C17.1711 10.5 17.3602 10.5554 17.5228 10.6596C17.6854 10.7638 17.8147 10.9124 17.8954 11.0878C17.9762 11.2633 18.0049 11.4582 17.9782 11.6494C17.9516 11.8407 17.8706 12.0203 17.745 12.167L16.99 13.047C16.5239 13.5907 16.2677 14.2833 16.2677 14.9995C16.2677 15.7157 16.5239 16.4083 16.99 16.952L17.745 17.832C17.8709 17.9787 17.9521 18.1584 17.979 18.3498C18.0058 18.5412 17.9771 18.7363 17.8964 18.912C17.8156 19.0876 17.6862 19.2363 17.5234 19.3406C17.3606 19.4448 17.1713 19.5001 16.978 19.5H4.5C3.30653 19.5 2.16193 19.0259 1.31802 18.182C0.474106 17.3381 0 16.1935 0 15ZM4.5 12.5C3.83696 12.5 3.20107 12.7634 2.73223 13.2322C2.26339 13.7011 2 14.337 2 15C2 15.663 2.26339 16.2989 2.73223 16.7678C3.20107 17.2366 3.83696 17.5 4.5 17.5H14.938C14.4995 16.7398 14.2687 15.8776 14.2687 15C14.2687 14.1224 14.4995 13.2602 14.938 12.5H4.5Z"/>
    </svg>
);

const ReadingCardIcon = ({ active }: { active: boolean }) => (
    <svg 
        width="17" 
        height="21" 
        viewBox="0 0 17 21" 
        fill="currentColor" 
        xmlns="http://www.w3.org/2000/svg"
        className={`tab-item-icon ${active ? 'active' : ''}`}
    >
        <path fillRule="evenodd" clipRule="evenodd" d="M2.5 0.5C1.96957 0.5 1.46086 0.710714 1.08579 1.08579C0.710714 1.46086 0.5 1.96957 0.5 2.5V18.5C0.5 19.0304 0.710714 19.5391 1.08579 19.9142C1.46086 20.2893 1.96957 20.5 2.5 20.5H13.5C14.2956 20.5 15.0587 20.1839 15.6213 19.6213C16.1839 19.0587 16.5 18.2956 16.5 17.5V3.5C16.5 2.70435 16.1839 1.94129 15.6213 1.37868C15.0587 0.816071 14.2956 0.5 13.5 0.5H2.5ZM6.5 2.5H2.5V18.5H13.5C13.7652 18.5 14.0196 18.3946 14.2071 18.2071C14.3946 18.0196 14.5 17.7652 14.5 17.5V3.5C14.5 3.23478 14.3946 2.98043 14.2071 2.79289C14.0196 2.60536 13.7652 2.5 13.5 2.5H12.5V11.476C12.5 12.376 11.412 12.826 10.776 12.19L9.5 10.914L8.224 12.19C7.588 12.826 6.5 12.376 6.5 11.476V2.5ZM10.5 2.5H8.5V9.086L8.786 8.8C8.9754 8.6107 9.23222 8.50436 9.5 8.50436C9.76778 8.50436 10.0246 8.6107 10.214 8.8L10.5 9.086V2.5Z"/>
    </svg>
);

const CommunityIcon = ({ active }: { active: boolean }) => (
    <svg 
        width="20" 
        height="21" 
        viewBox="0 0 20 21" 
        fill="currentColor" 
        xmlns="http://www.w3.org/2000/svg"
        className={`tab-item-icon ${active ? 'active' : ''}`}
    >
        <path fillRule="evenodd" clipRule="evenodd" d="M0.5 2.5C0.5 1.96957 0.710714 1.46086 1.08579 1.08579C1.46086 0.710715 1.96957 0.500002 2.5 0.500002H4.5C4.864 0.500002 5.206 0.597002 5.5 0.768002C5.80385 0.592007 6.14886 0.499544 6.5 0.500002H8.5C9.227 0.500002 9.864 0.888002 10.214 1.469C10.424 1.301 10.67 1.173 10.946 1.099L12.878 0.582002C13.1317 0.513945 13.3963 0.496534 13.6568 0.530766C13.9172 0.564997 14.1684 0.650199 14.3959 0.781505C14.6234 0.912812 14.8228 1.08765 14.9828 1.29604C15.1427 1.50442 15.26 1.74227 15.328 1.996L19.468 17.451C19.5361 17.7047 19.5535 17.9694 19.5192 18.2298C19.485 18.4902 19.3998 18.7414 19.2685 18.9689C19.1372 19.1964 18.9624 19.3958 18.754 19.5558C18.5456 19.7157 18.3077 19.833 18.054 19.901L16.122 20.418C15.8683 20.4861 15.6037 20.5035 15.3432 20.4692C15.0828 20.435 14.8316 20.3498 14.6041 20.2185C14.3766 20.0872 14.1772 19.9124 14.0172 19.704C13.8573 19.4956 13.74 19.2577 13.672 19.004L10.5 7.163V18.5C10.5 19.0304 10.2893 19.5391 9.91421 19.9142C9.53914 20.2893 9.03043 20.5 8.5 20.5H6.5C6.14886 20.5005 5.80385 20.408 5.5 20.232C5.19615 20.408 4.85114 20.5005 4.5 20.5H2.5C1.96957 20.5 1.46086 20.2893 1.08579 19.9142C0.710714 19.5391 0.5 19.0304 0.5 18.5V2.5ZM2.5 2.5H4.5V18.5H2.5V2.5ZM8.5 18.5H6.5V2.5H8.5V18.5ZM11.464 3.031L13.395 2.514L17.537 17.969L15.605 18.486L11.464 3.031Z"/>
    </svg>
);

const MyPageIcon = ({ active }: { active: boolean }) => (
    <svg 
        width="18" 
        height="21" 
        viewBox="0 0 18 21" 
        fill="currentColor" 
        xmlns="http://www.w3.org/2000/svg"
        className={`tab-item-icon ${active ? 'active' : ''}`}
    >
        <path fillRule="evenodd" clipRule="evenodd" d="M13 12.5C14.2885 12.5001 15.5272 12.9975 16.4578 13.8887C17.3884 14.7798 17.9391 15.9958 17.995 17.283L18 17.5V18.5C18.0002 19.0046 17.8096 19.4906 17.4665 19.8605C17.1234 20.2305 16.6532 20.4572 16.15 20.495L16 20.5H2C1.49542 20.5002 1.00943 20.3096 0.639452 19.9665C0.269471 19.6234 0.0428433 19.1532 0.00500011 18.65L0 18.5V17.5C7.44425e-05 16.2115 0.497542 14.9728 1.38866 14.0422C2.27978 13.1116 3.49575 12.5609 4.783 12.505L5 12.5H13ZM13 14.5H5C4.23479 14.5 3.49849 14.7923 2.94174 15.3173C2.38499 15.8422 2.04989 16.5601 2.005 17.324L2 17.5V18.5H16V17.5C16 16.7348 15.7077 15.9985 15.1827 15.4417C14.6578 14.885 13.9399 14.5499 13.176 14.505L13 14.5ZM9 0.5C10.3261 0.5 11.5979 1.02678 12.5355 1.96447C13.4732 2.90215 14 4.17392 14 5.5C14 6.82608 13.4732 8.09785 12.5355 9.03553C11.5979 9.97322 10.3261 10.5 9 10.5C7.67392 10.5 6.40215 9.97322 5.46447 9.03553C4.52678 8.09785 4 6.82608 4 5.5C4 4.17392 4.52678 2.90215 5.46447 1.96447C6.40215 1.02678 7.67392 0.5 9 0.5ZM9 2.5C8.60603 2.5 8.21593 2.5776 7.85195 2.72836C7.48797 2.87913 7.15726 3.1001 6.87868 3.37868C6.6001 3.65726 6.37913 3.98797 6.22836 4.35195C6.0776 4.71593 6 5.10603 6 5.5C6 5.89397 6.0776 6.28407 6.22836 6.64805C6.37913 7.01203 6.6001 7.34274 6.87868 7.62132C7.15726 7.8999 7.48797 8.12087 7.85195 8.27164C8.21593 8.4224 8.60603 8.5 9 8.5C9.79565 8.5 10.5587 8.18393 11.1213 7.62132C11.6839 7.05871 12 6.29565 12 5.5C12 4.70435 11.6839 3.94129 11.1213 3.37868C10.5587 2.81607 9.79565 2.5 9 2.5Z"/>
    </svg>
);

interface TabItem {
    id: string;
    name: string;
    icon: React.ComponentType<{ active: boolean }>;
    path: string;
    isDummy?: boolean;
}

const currentTabs: TabItem[] = [
    { id: 'library', name: '서재', icon: LibraryIcon, path: '/library' },
    { id: 'readingCard', name: '독서카드', icon: ReadingCardIcon, path: '/reading-card' },
    { id: 'camera', name: '', icon: () => null, path: '', isDummy: true },
    { id: 'community', name: '커뮤니티', icon: CommunityIcon, path: '/community' },
    { id: 'myPage', name: '마이페이지', icon: MyPageIcon, path: '/my-page' },
];

function TabBar() {
    const navigate = useNavigate();
    const location = useLocation();

    // location.pathname이 변경될 때마다 activeTab을 업데이트하는 useEffect
    // ✨ 이 부분을 추가하거나 수정합니다.
    useEffect(() => {
        const currentTab = currentTabs.find(tab => tab.path === location.pathname);
        if (currentTab) {
            setActiveTab(currentTab.id);
        } else {
            // 현재 경로가 탭바에 없는 경우, 기본값 또는 특정 로직 처리
            // 예를 들어, 상세 페이지로 이동했을 때 탭이 비활성화되도록 할 수 있습니다.
            // setActiveTab(''); // 모든 탭 비활성화
        }
    }, [location.pathname]); // location.pathname이 변경될 때마다 이 효과를 재실행

    const initialActiveTabId = currentTabs.find(tab => tab.path === location.pathname)?.id ?? 'library';
    const [activeTab, setActiveTab] = useState<string>(initialActiveTabId);


    const handleTabClick = (tab: TabItem) => {
        if (tab.isDummy) {
            return;
        }
        setActiveTab(tab.id); // 탭 클릭 시에도 상태 업데이트
        console.log(`탭 "${tab.name}" 클릭됨. 경로: ${tab.path}`);
        navigate(tab.path);
    };

    return (
        <div className="tab-bar-container">
            {currentTabs.map((tab) => {
                const isActive = activeTab === tab.id || location.pathname === tab.path;
                const IconComponent = tab.icon;

                return (
                    <div
                        key={tab.id}
                        className={`${tab.isDummy ? 'dummy-tab-item' : 'tab-item'} ${isActive ? 'active' : ''}`}
                        onClick={() => handleTabClick(tab)}
                    >
                        {!tab.isDummy && (
                            <>
                                <IconComponent active={isActive} />
                                <span className='tab-item-text'>{tab.name}</span>
                            </>
                        )}
                    </div>
                );
            })}
        </div>
    );
}

export default TabBar;