// src/components/TabBar.tsx
import { useState, useEffect } from 'react'; // useEffect 임포트 추가
import { useNavigate, useLocation } from 'react-router-dom';

// SVG 아이콘 컴포넌트를 정의합니다. (기존과 동일)
const LibraryIcon = ({ active }: { active: boolean }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
        <g clipPath="url(#clip0_501_727)">
            <path fillRule="evenodd" clipRule="evenodd" d="M3.255 4.167C3.12938 4.02033 3.04844 3.84071 3.02178 3.64944C2.99512 3.45817 3.02385 3.26327 3.10457 3.08783C3.18529 2.9124 3.31461 2.76378 3.47722 2.65959C3.63982 2.55541 3.82888 2.50002 4.022 2.5H16.5C17.0909 2.5 17.6761 2.6164 18.2221 2.84254C18.768 3.06869 19.2641 3.40016 19.682 3.81802C20.0998 4.23588 20.4313 4.73196 20.6575 5.27792C20.8836 5.82389 21 6.40905 21 7C21 7.59095 20.8836 8.17611 20.6575 8.72208C20.4313 9.26804 20.0998 9.76412 19.682 10.182C19.2641 10.5998 18.768 10.9313 18.2221 11.1575C17.6761 11.3836 17.0909 11.5 16.5 11.5H4.022C3.82888 11.5 3.63982 11.4446 3.47722 11.3404C3.31461 11.2362 3.18529 11.0876 3.10457 10.9122C3.02385 10.7367 2.99512 10.5418 3.02178 10.3506C3.04844 10.1593 3.12938 9.97967 3.255 9.833L4.009 8.953C4.47512 8.40925 4.73134 7.71669 4.73134 7.0005C4.73134 6.28431 4.47512 5.59175 4.009 5.048L3.255 4.167ZM3 17C3 15.8065 3.47411 14.6619 4.31802 13.818C5.16193 12.9741 6.30653 12.5 7.5 12.5H19.978C20.1711 12.5 20.3602 12.5554 20.5228 12.6596C20.6854 12.7638 20.8147 12.9124 20.8954 13.0878C20.9762 13.2633 21.0049 13.4582 20.9782 13.6494C20.9516 13.8407 20.8706 14.0203 20.745 14.167L19.99 15.047C19.5239 15.5907 19.2677 16.2833 19.2677 16.9995C19.2677 17.7157 19.5239 18.4083 19.99 18.952L20.745 19.832C20.8709 19.9787 20.9521 20.1584 20.979 20.3498C21.0058 20.5412 20.9771 20.7363 20.8964 20.912C20.8156 21.0876 20.6862 21.2363 20.5234 21.3406C20.3606 21.4448 20.1713 21.5001 19.978 21.5H7.5C6.30653 21.5 5.16193 21.0259 4.31802 20.182C3.47411 19.3381 3 18.1935 3 17Z" fill={active ? "#0CE19A" : "#E7E9EF"}/>
        </g>
        <defs>
            <clipPath id="clip0_501_727">
                <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
            </clipPath>
        </defs>
    </svg>
);

const ReadingCardIcon = ({ active }: { active: boolean }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
        <g clipPath="url(#clip0_501_736)">
            <path fillRule="evenodd" clipRule="evenodd" d="M6.5 2.5C5.96957 2.5 5.46086 2.71071 5.08579 3.08579C4.71071 3.46086 4.5 3.96957 4.5 4.5V20.5C4.5 21.0304 4.71071 21.5391 5.08579 21.9142C5.46086 22.2893 5.96957 22.5 6.5 22.5H17.5C18.2956 22.5 19.0587 22.1839 19.6213 21.6213C20.1839 21.0587 20.5 20.2956 20.5 19.5V5.5C20.5 4.70435 20.1839 3.94129 19.6213 3.37868C19.0587 2.81607 18.2956 2.5 17.5 2.5H6.5ZM10.5 4.5H6.5V20.5H17.5C17.7652 20.5 18.0196 20.3946 18.2071 20.2071C18.3946 20.0196 18.5 19.7652 18.5 19.5V5.5C18.5 5.23478 18.3946 4.98043 18.2071 4.79289C18.0196 4.60536 17.7652 4.5 17.5 4.5H16.5V13.476C16.5 14.376 15.412 14.826 14.776 14.19L13.5 12.914L12.224 14.19C11.588 14.826 10.5 14.376 10.5 13.476V4.5ZM14.5 4.5H12.5V11.086L12.786 10.8C12.9754 10.6107 13.2322 10.5044 13.5 10.5044C13.7678 10.5044 14.0246 10.6107 14.214 10.8L14.5 11.086V4.5Z" fill={active ? "#0CE19A" : "#E7E9EF"}/>
        </g>
        <defs>
            <clipPath id="clip0_501_736">
                <rect width="24" height="24" fill="white" transform="translate(0.5 0.5)"/>
            </clipPath>
        </defs>
    </svg>
);

const CommunityIcon = ({ active }: { active: boolean }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
        <g clipPath="url(#clip0_501_754)">
            <path fillRule="evenodd" clipRule="evenodd" d="M3.5 4.5C3.5 3.96957 3.71071 3.46086 4.08579 3.08579C4.46086 2.71072 4.96957 2.5 5.5 2.5H7.5C7.864 2.5 8.206 2.597 8.5 2.768C8.80385 2.59201 9.14886 2.49954 9.5 2.5H11.5C12.227 2.5 12.864 2.888 13.214 3.469C13.424 3.301 13.67 3.173 13.946 3.099L15.878 2.582C16.1317 2.51394 16.3963 2.49653 16.6568 2.53077C16.9172 2.565 17.1684 2.6502 17.3959 2.78151C17.6234 2.91281 17.8228 3.08765 17.9828 3.29604C18.1427 3.50442 18.26 3.74227 18.328 3.996L22.468 19.451C22.5361 19.7047 22.5535 19.9694 22.5192 20.2298C22.485 20.4902 22.3998 20.7414 22.2685 20.9689C22.1372 21.1964 21.9624 21.3958 21.754 21.5558C21.5456 21.7157 21.3077 21.833 21.054 21.901L19.122 22.418C18.8683 22.4861 18.6037 22.5035 18.3432 22.4692C18.0828 22.435 17.8316 22.3498 17.6041 22.2185C17.3766 22.0872 17.1772 21.9124 17.0172 21.704C16.8573 21.4956 16.74 21.2577 16.672 21.004L13.5 9.163V20.5C13.5 21.0304 13.2893 21.5391 12.9142 21.9142C12.5391 22.2893 12.0304 22.5 11.5 22.5H9.5C9.14886 22.5005 8.80385 22.408 8.5 22.232C8.19615 22.408 7.85114 22.5005 7.5 22.5H5.5C4.96957 22.5 4.46086 22.2893 4.08579 21.9142C3.71071 21.5391 3.5 21.0304 3.5 20.5V4.5ZM5.5 4.5H7.5V20.5H5.5V4.5ZM11.5 20.5H9.5V4.5H11.5V20.5ZM14.464 5.031L16.395 4.514L20.537 19.969L18.605 20.486L14.464 5.031Z" fill={active ? "#0CE19A" : "#E7E9EF"}/>
        </g>
        <defs>
            <clipPath id="clip0_501_754">
                <rect width="24" height="24" fill="white" transform="translate(0.5 0.5)"/>
            </clipPath>
        </defs>
    </svg>
);

const MyPageIcon = ({ active }: { active: boolean }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
        <g clipPath="url(#clip0_501_763)">
            <path fillRule="evenodd" clipRule="evenodd" d="M16 14.5C17.2885 14.5001 18.5272 14.9975 19.4578 15.8887C20.3884 16.7798 20.9391 17.9958 20.995 19.283L21 19.5V20.5C21.0002 21.0046 20.8096 21.4906 20.4665 21.8605C20.1234 22.2305 19.6532 22.4572 19.15 22.495L19 22.5H5C4.49542 22.5002 4.00943 22.3096 3.63945 21.9665C3.26947 21.6234 3.04284 21.1532 3.005 20.65L3 20.5V19.5C3.00007 18.2115 3.49754 16.9728 4.38866 16.0422C5.27978 15.1116 6.49575 14.5609 7.783 14.505L8 14.5H16ZM16 16.5H8C7.23479 16.5 6.49849 16.7923 5.94174 17.3173C5.38499 17.8422 5.04989 18.5601 5.005 19.324L5 19.5V20.5H19V19.5C19 18.7348 18.7077 17.9985 18.1827 17.4417C17.6578 16.885 16.9399 16.5499 16.176 16.505L16 16.5ZM12 2.5C13.3261 2.5 14.5979 3.02678 15.5355 3.96447C16.4732 4.90215 17 6.17392 17 7.5C17 8.82608 16.4732 10.0979 15.5355 11.0355C14.5979 11.9732 13.3261 12.5 12 12.5C10.6739 12.5 9.40215 11.9732 8.46447 11.0355C7.52678 10.0979 7 8.82608 7 7.5C7 6.17392 7.52678 4.90215 8.46447 3.96447C9.40215 3.02678 10.6739 2.5 12 2.5ZM12 4.5C11.606 4.5 11.2159 4.5776 10.8519 4.72836C10.488 4.87913 10.1573 5.1001 9.87868 5.37868C9.6001 5.65726 9.37913 5.98797 9.22836 6.35195C9.0776 6.71593 9 7.10603 9 7.5C9 7.89397 9.0776 8.28407 9.22836 8.64805C9.37913 9.01203 9.6001 9.34274 9.87868 9.62132C10.1573 9.8999 10.488 10.1209 10.8519 10.2716C11.2159 10.4224 11.606 10.5 12 10.5C12.7956 10.5 13.5587 10.1839 14.1213 9.62132C14.6839 9.05871 15 8.29565 15 7.5C15 6.70435 14.6839 5.94129 14.1213 5.37868C13.5587 4.81607 12.7956 4.5 12 4.5Z" fill={active ? "#0CE19A" : "#E7E9EF"}/>
        </g>
        <defs>
            <clipPath id="clip0_501_763">
                <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
            </clipPath>
        </defs>
    </svg>
);

interface TabItem {
    id: string;
    name: string;
    icon: React.ComponentType<{ active: boolean }>;
    path: string;
    isDummy?: boolean;
}

const currentTabs: TabItem[] = [
    { id: 'library', name: '서재', icon: LibraryIcon, path: '/library' },
    { id: 'readingCard', name: '독서카드', icon: ReadingCardIcon, path: '/reading-card' },
    { id: 'camera', name: '', icon: () => null, path: '', isDummy: true },
    { id: 'community', name: '커뮤니티', icon: CommunityIcon, path: '/community' },
    { id: 'myPage', name: '마이페이지', icon: MyPageIcon, path: '/my-page' },
];

function TabBar() {
    const navigate = useNavigate();
    const location = useLocation();

    // location.pathname이 변경될 때마다 activeTab을 업데이트하는 useEffect
    // ✨ 이 부분을 추가하거나 수정합니다.
    useEffect(() => {
        const currentTab = currentTabs.find(tab => tab.path === location.pathname);
        if (currentTab) {
            setActiveTab(currentTab.id);
        } else {
            // 현재 경로가 탭바에 없는 경우, 기본값 또는 특정 로직 처리
            // 예를 들어, 상세 페이지로 이동했을 때 탭이 비활성화되도록 할 수 있습니다.
            // setActiveTab(''); // 모든 탭 비활성화
        }
    }, [location.pathname]); // location.pathname이 변경될 때마다 이 효과를 재실행

    const initialActiveTabId = currentTabs.find(tab => tab.path === location.pathname)?.id ?? 'library';
    const [activeTab, setActiveTab] = useState<string>(initialActiveTabId);


    const handleTabClick = (tab: TabItem) => {
        if (tab.isDummy) {
            return;
        }
        setActiveTab(tab.id); // 탭 클릭 시에도 상태 업데이트
        console.log(`탭 "${tab.name}" 클릭됨. 경로: ${tab.path}`);
        navigate(tab.path);
    };

    return (
        <div className="tab-bar-container">
            {currentTabs.map((tab) => {
                const isActive = activeTab === tab.id || location.pathname === tab.path;
                const IconComponent = tab.icon;

                return (
                    <div
                        key={tab.id}
                        className={`${tab.isDummy ? 'dummy-tab-item' : 'tab-item'} ${isActive ? 'active' : ''}`}
                        onClick={() => handleTabClick(tab)}
                    >
                        {!tab.isDummy && (
                            <>
                                <div className="tab-item-icon">
                                    <IconComponent active={isActive} />
                                </div>
                                <span>{tab.name}</span>
                            </>
                        )}
                    </div>
                );
            })}
        </div>
    );
}

export default TabBar;